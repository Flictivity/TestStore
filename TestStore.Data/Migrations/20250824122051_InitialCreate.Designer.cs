// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestStore.Data;

#nullable disable

namespace TestStore.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250824122051_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestStore.Data.Entities.ReceiptDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date")
                        .HasColumnName("document_date");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("document_number");

                    b.HasKey("Id")
                        .HasName("pk_receipt_documents");

                    b.ToTable("receipt_documents", (string)null);
                });

            modelBuilder.Entity("TestStore.Data.Entities.ReceiptResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<int>("ReceiptDocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("receipt_document_id");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("resource_id");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id")
                        .HasName("pk_receipt_resources");

                    b.HasIndex("ReceiptDocumentId")
                        .HasDatabaseName("ix_receipt_resources_receipt_document_id");

                    b.HasIndex("ResourceId")
                        .HasDatabaseName("ix_receipt_resources_resource_id");

                    b.HasIndex("UnitId")
                        .HasDatabaseName("ix_receipt_resources_unit_id");

                    b.ToTable("receipt_resources", (string)null);
                });

            modelBuilder.Entity("TestStore.Data.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsArchive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_resources");

                    b.ToTable("resources", (string)null);
                });

            modelBuilder.Entity("TestStore.Data.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsArchive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_units");

                    b.ToTable("units", (string)null);
                });

            modelBuilder.Entity("TestStore.Data.Entities.ReceiptResource", b =>
                {
                    b.HasOne("TestStore.Data.Entities.ReceiptDocument", "ReceiptDocument")
                        .WithMany()
                        .HasForeignKey("ReceiptDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_receipt_resources_receipt_documents_receipt_document_id");

                    b.HasOne("TestStore.Data.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_receipt_resources_resources_resource_id");

                    b.HasOne("TestStore.Data.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_receipt_resources_units_unit_id");

                    b.Navigation("ReceiptDocument");

                    b.Navigation("Resource");

                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
